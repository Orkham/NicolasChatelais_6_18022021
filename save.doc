/*
class Photo extends Media{
    constructor(id,
        photographerId, image, tags, likes, date, price){
            super(id, photographerId, image, tags, likes, date, price);
        }
    transformTitle(){
        let beautifulTitle = this.image.replace("_", " ").slice(0,-4);
        return beautifulTitle;
    }
    generateImg(){
        const photosSection = document.getElementById("photosSection");
        photosSection.innerHTML +=
        `<a href="#">
            <figure class="photoCard">
                <img src="img/Mimi/${this.image}" alt="" class="photoCard__img"></img>
                <figcaption>
                    <p class="photoCard__title">${this.transformTitle()}</p>
                    <div class="photoCard__numbers">
                        <p class="photoCard__numbers--price">${this.price} €</p>
                        <p class="photoCard__numbers--like">${this.likes} <i class="fas fa-heart"></i></p>
                    </div>
                </figcaption>
            </figure>
        </a>`

    }

}

class Video extends Media{
    constructor(id,
        photographerId, video, tags, likes, date, price){
            super(id, photographerId, video, tags, likes, date, price);
        }
    transformTitle(){
        let beautifulTitle = this.video.replace("_", " ").slice(0,-4);
        return beautifulTitle;
    }
    generateVideo(){
        const photosSection = document.getElementById("photosSection");
        photosSection.innerHTML +=
        `<a href="#">
            <figure class="photoCard">
                <video controls src="img/Mimi/${this.video}"  type="video/mp4 class=""></video>
                <figcaption>
                    <p class="photoCard__title">${this.transformTitle()}</p>
                    <div class="photoCard__numbers">
                        <p class="photoCard__numbers--price">${this.price} €</p>
                        <p class="photoCard__numbers--like">${this.likes} <i class="fas fa-heart"></i></p>
                    </div>
                </figcaption>
            </figure>
        </a>`

    }

}
*/

/*function displayMedias(array){
        for (let i = 0 ; i < array.length ; i++){
            switch(array[i].image){
                case undefined:
                    array[i].generateVideo();
                break;
                default:
                    array[i].generateImg();
            }

            /*Nombre total de like*/
            /*
            likes += array[i].likes;
            likesNumber.innerHTML = likes + '<i class="fas fa-heart"></i>';
            
        }
        console.log(mediasList);
    }*/

    /*
        this.generateImg = function(){
            
            photosSection.innerHTML +=
            `<figure class="photoCard">
                <a href="#">
                    <img src="img/${this.name}/${this.image}" alt="" class="photoCard__img" loading="lazy"></img>
                </a>
                <figcaption>
                    <p class="photoCard__title">${this.title}</p>
                    <div class="photoCard__numbers">
                        <p class="photoCard__numbers--price">${this.price} €</p>
                        <p class="photoCard__numbers--like">${this.likes} <i class="fas fa-heart"></i></p>
                    </div>
                </figcaption>
            </figure>`
 
        }
        
        this.generateVideo=function(){
            photosSection.innerHTML +=
            `<figure class="photoCard">
                <a href="#">
                    <video controls src="img/${this.name}/${this.video}"  type="video/mp4 class=""></video>
                </a>
                <figcaption>
                    <p class="photoCard__title">${this.title}</p>
                    <div class="photoCard__numbers">
                        <p class="photoCard__numbers--price">${this.price} €</p>
                        <p class="photoCard__numbers--like">${this.likes} <i class="fas fa-heart"></i></p>
                    </div>
                </figcaption>
            </figure>`
        }
        */
         /*
        switch(array[i].image){
            case undefined:
                array[i].generateVideo();
            break;
            default:
                array[i].generateImg();
        }
        */
        /*
        /*Tabeau et fonction pour regrouper les tags actifs*/
    let tagsSelectedList = [];
        if(tagsSelectedList.includes(tagSelected)){
            /*** Version Vanilla ***/
            /*let index = tagsSelectedList.indexOf(tagSelected);
            tagsSelectedList.splice(index,1);*/

            /*** Version ECMAScript 6 */
            /*
            tagsSelectedList = tagsSelectedList.filter(item => item !== tagSelected);

        }else{
            tagsSelectedList.push(tagSelected);
        }
*/
for(let i = 0 ; i < mediasList.length ; i++){
        let img = document.getElementById("id_" + mediasList[i].id);
        //console.log(test);
            if(mediasList[i].image){
                img.addEventListener("click", ()=>{
                    lightbox.style.display = "flex";
                    lightboxModal.innerHTML = 
                    `<img src="img/${mediasList[i].name}/${mediasList[i].image}" alt="${mediasList[i].title}" class="lightbox-modal__box--photo" id="${mediasList[i].id}"></img>`
                })
            }else{
                lightboxModal.innerHTML = 
                    `<video controls src="img/${mediasList[i].name}/${mediasList[i].video}"  type="video/mp4 class="" id="${mediasList[i].id}"></video>`
            }
            nextImg.addEventListener("click", ()=>{
                lightboxModal.innerHTML = 
            `<img src="img/${mediasList[i+1].name}/${mediasList[i+1].image}" alt="" class="lightbox-modal__box--photo" id="${mediasList[i+1].id}"></img>`
            })
    }
    class Lightbox{
    constructor(photographerName, medias, id){
        this.photographerName = photographerName;
        this.medias = medias,
        this.id = id;

        this.generateLightbox = function(){

        }
    }
    
}
/*
    const medias = document.querySelectorAll(".media")
    const mediasArray2 = Array.from(medias)
    const lightboxContent = new Lightbox(
        mediasArray2
    )
    

    mediasArray2.forEach(media => {
        
        media.addEventListener("click", function(){lightboxContent.generateLightbox(media.index)})
        
    })
    */
    //console.log(medias);
    //nextImg.addEventListener("click", lightboxContent.nextImgDisplay)

    /*function nextImgDisplay(index){
        displayLightbox(index+1)
    }*/

    /*
    function displayLightbox(index){
        //console.log(mediasArray2[index].src)
        lightbox.style.display = "flex";
        lightboxModal.innerHTML = `<img src="${mediasArray2[index].src}" alt="" class="lightbox-modal__box--photo"></img>`
       
    }
*/
if(previousTag.time < tag.timeStamp && previousTag.target == tag.target){
            console.log("reset")
            console.log(photographersList)
            photographersSection.innerHTML = ""
            for(let i = 0 ; i < photographersList.length ; i++){
                console.log(photographersList[i].generatePhotographerCard)
                photographersList[i].generatePhotographerCard()
        
            }
        }
        let previousTag = {
            time : tag.timeStamp,
            target : tag.target
        }


/*
if(tag.target.classList.contains("active")){
    console.log("remove same tag")
    tag.target.classList.remove("active")
}else
{
    console.log("add tag on click")
    tag.target.classList.add("active")
}
*/

/*
    let searchOptionSelected = document.getElementById("searchBy");
    
    function sortByOption(){
        photosSection.innerHTML = "";
        switch(searchOptionSelected.value){
            case "Popularité":
                console.log("Popularité");
                mediasList.sort(function(a,b){
                    return b.likes - a.likes;
                });
                displayMedias(mediasList)
                listenForLightbox()
                break;
            case "Date":
                console.log("Date");
                mediasList.sort(function(a,b){
                    if (a.date < b.date)
                        return -1;
                    if (a.date > b.date)
                        return 1;
                    return 0;
                });
                displayMedias(mediasList)
                listenForLightbox()
                break;
            case "Titre":
                console.log("Titre");
                mediasList.sort(function(a,b){
                    if (a.title < b.title)
                        return -1;
                    if (a.title > b.title )
                        return 1;
                    return 0;
                });
                displayMedias(mediasList)
                listenForLightbox()
                break;
        }
    }
    
    searchOptionSelected.addEventListener("change",sortByOption); 
    */

    /*
    options.forEach(option=>{
        //console.log(option.children[0].checked)
        option.addEventListener("change",(e)=>{
            console.log(e.target)
            console.log(e.target.id)
            photosSection.innerHTML = "";
            switch(e.target.id){
                case "popularité":
                    mediasList.sort(function(a,b){
                        return b.likes - a.likes;
                    });
                    displayMedias(mediasList)
                    listenForLightbox()
                    break;
                case "date":
                    mediasList.sort(function(a,b){
                        if (a.date < b.date)
                            return -1;
                        if (a.date > b.date)
                            return 1;
                        return 0;
                    });
                    displayMedias(mediasList)
                    listenForLightbox()
                    break;
                case "titre":
                    mediasList.sort(function(a,b){
                        if (a.title < b.title)
                            return -1;
                        if (a.title > b.title )
                            return 1;
                        return 0;
                    });
                    displayMedias(mediasList)
                    listenForLightbox()
                    break;
            }
        })})
        */

        /*
        if(totalLikesNumber.textContent == 0){
            let likes = 0;
            for(let i = 0 ; i < mediasList.length ; i++){
                likes += mediasList[i].likes
            }   
            totalLikesNumber.innerHTML = likes + ' <i class="fas fa-heart"></i>';
        }
        */


/*
function displayPhotographersByTag(tag, tags, list){
        
    let tagSelected = tag.target.textContent.toLowerCase();
    tag.target.classList.toggle("active")
    
    for(let i = 0 ; i < tags.length ; i++){
        if(tags[i]!=tag.target)
        { 
            tags[i].classList.remove("active")
        }
    }
    
    /*Faire correspondre les tags sélectionnés et l'affichage*/
/*
    if(tag.target.classList.contains("active")){
        for(let i = 0 ; i < articlesList.length ; i++){

            if((list[i].tags).includes(tagSelected.substring(1))){
                articlesList[i].style.display = "flex";
            }else{
                articlesList[i].style.display = "none";
            }
        }
    }else{
        photographersSection.innerHTML = ""
        for(let i = 0 ; i < list.length ; i++){
            list[i].generatePhotographerCard(photographersSection)
        }
    }
}
*/

/*
function myFunction (event) {
    let x = event.keyCode;
    if (x == 27) {// 27 touche ESC est
    alert ( "Vous avez appuyé sur la touche Echap !");
    }
} 
closeFormBtn.addEventListener("click", myFunction);
*/


this.listenForLightbox = function(){
            //navigation avec l'index
            let count = 0;
            //retour au début quand on dépasse le max
            let max = 0;
            
            let medias = document.querySelectorAll(".media")
            let arrayFromMedias = Array.from(medias)
            let lightboxContent = new Lightbox(arrayFromMedias)
            

            
            /*Navigation au clavier des médias*/
            function keyboardNavigation(){
                
                
                    lightboxModal.addEventListener('keydown',(e)=>{
                        if(e.code == '27'/*Echap*/){
            
                            document.getElementById("displayLightbox").style.display = "none";
                            body.style.overflowY = "visible"
                        }else if(e.code == '39'/*Flèche droite*/){
                            console.log('coucou')
                            nextImgDisplay()
                        }else if(e.code == '37'/*Flèche gauche*/){
                            prevImgDisplay()
                        }else if (e.code =='32'/*Barre d'espace*/){
                            lightboxModal.firstChild.focus()
                        }
                    })    
                    
                
            }
            keyboardNavigation()

            function mouseNavigation(){
                arrayFromMedias.forEach(media => {

                    media.addEventListener("click", ()=>{
                        count = media.index
                        max = arrayFromMedias.length
                        lightboxContent.generateLightbox(count)
                        nextImg.addEventListener("click", nextImgDisplay)
                        prevImg.addEventListener("click", prevImgDisplay)
                        
                    })
                })
            }
            mouseNavigation()
            

            
            
            //Callback média suivant
            function nextImgDisplay(){
                count++
                count > max-1 ? count = 0 : count
                lightboxContent.generateLightbox(count)
                
            }

            //Callback média précédent
            function prevImgDisplay(){
                count--
                count < 0 ? count = max-1 : count 
                lightboxContent.generateLightbox(count)
                
            }
            
        }
    }
        
